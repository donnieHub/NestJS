services:
  app:
    build:
      context: r-omni
      dockerfile: apps/r-omni/Dockerfile
    container_name: nestjs_app
    restart: always
    ports:
      - '3002:3002'
    environment:
      - PORT=3002
      - NODE_ENV=development
      - NATS_URL=nats://nats-server:4222
    depends_on:
      - nats-server
    networks:
      - nats-network

  user:
    build:
      context: r-omni
      dockerfile: apps/user/Dockerfile
    container_name: user
    restart: always
    environment:
      - NODE_ENV=development
      - NATS_URL=nats://nats-server:4222
      - DB_NAME=auth_service_db
      - DB_HOST=auth_service_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      nats-server:
        condition: service_started
      auth_service_db:
        condition: service_healthy
    command: sh -c "yarn migration:users:up && yarn start:dev user"
    networks:
      - nats-network

  auth_service_db:
    image: postgres:17.5
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_service_db
    ports:
      - '5434:5432'
    volumes:
      - auth_service_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nats-network

  nats-server:
    image: nats:2.11.6
    container_name: nats-server
    command: --http_port 8222 -DV
    ports:
      - "4222:4222"
      - "8222:8222"
    restart: unless-stopped
    networks:
      - nats-network

networks:
  nats-network:
    driver: bridge

volumes:
  auth_service_data: